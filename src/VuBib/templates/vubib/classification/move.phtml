<?php
    $this->headTitle('Move Classification');
    $this->layout()->breadcrumbs .= '<a href="' . $this->url('manage_classification') . '">Classification</a> &gt; Move';
    $this->layout()->page = "Classification/Move";
?>

<div class="row">
    <div class="col-xs-12 col-md-6">
        <p class="moveError alert alert-danger" style="display:none">Cannot move a classification into itself.</p>

        <form id="move-folder-data" name="form_mv_classification" method="POST" action="<?= $this->url('manage_classification') ?>">
            <input type="hidden" name="action" value="move"/>
            <input type="hidden" name="id" value="<?=$this->id ?>"/>
            <input type="hidden" name="new_parent" id="new_parent_id"/>
            <label class="control-label">Subject Tree: </label>

            <div id="folder-list">
                <p>Loading...</p>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary" name="submit_save" id="submit_save" value="Save">Save</button>
                <button type="submit" class="btn btn-default" name="submit" value="Cancel">Cancel</button>
            </div>
        </form>
    </div>
</div>

<script>
    var FOLDERS = JSON.parse(`<?=json_encode($this->classifications) ?>`);

    function loadChild(folderId) {
        $.ajax({
            method: 'post',
            url: "<?=$this->url('get_work_details')?>",
            data: { folder_Id: folderId },
            dataType: "json",
            cache: false,
            success: function (data) {
                if (data.folder_children.length > 0) {
                    // Add new folder
                    FOLDERS.push(data.folder_children);
                }
                render();
            }
        });
    }

    function bindSelect() {
        $(".select_fl").each(function bindSelectEach(index, select) {
            $(select)
                .off("input")
                .on("input", function selectInput() {
                    var newFolder = $(this).val();
                    if (newFolder === -1) {
                      FOLDERS = FOLDERS.slice(0, index);
                      render();
                      return;
                    }
                    // Change selected folder
                    FOLDERS[index].forEach(function changeSelected(child) {
                      child.selected = child.id == newFolder;
                    });
                    // Drop folders after change
                    FOLDERS = FOLDERS.slice(0, index + 1);
                    // AJAX
                    loadChild(newFolder);
                });
        });
    }

    function makeSelect(children, index) {
        var options = children
            .map(function (child) {
                return `<option value="${child['id']}"${child['selected'] ? ' selected' : ''}${child['id']=="<?=$this->id ?>"? ' disabled' : ''}>${child['text_fr']}</option>`;
            })
            .join("");
        return `<div class="form-group">
                    <select class="select_fl form-control" name="select_source_fl[]">
                        <option value="-1">${index === 0 ? "- dossier racine -" : ""}</option>
                        ${options}
                    </select>
                </div>`;
    }

    function render() {
        var html = "";
        for (var i = 0; i < FOLDERS.length; i++) {
            html += makeSelect(FOLDERS[i], i);
        }
        document.getElementById("folder-list").innerHTML = html;
        bindSelect();
    }

    // Load children of current folder
    var lastFolder = null;
    for (var i = 0; i < FOLDERS[FOLDERS.length - 1].length; i++) {
        if (FOLDERS[FOLDERS.length - 1][i].selected) {
            lastFolder = FOLDERS[FOLDERS.length - 1][i].id;
            break;
        }
    }
    if (lastFolder === null) {
        render();
    } else {
        loadChild(lastFolder);
    }

    $("#submit_save").click(function () {
        // Get value from last select element
        var $select = $('.select_fl').eq(($('.select_fl').length) - 1);
        var new_parent = $select.val();
        // If blank, get the second-to-last value
        if (new_parent == -1) {
            $select = $('.select_fl').eq(($('.select_fl').length) - 2);
            new_parent = $select.val();
        }

        // Get value from last select element
        if (new_parent == "<?=$this->id ?>") {
            $('.moveError').show();
            return false;
        }

        $("#new_parent_id").val(new_parent);
        return true;
    });
</script>
